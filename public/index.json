[{"authors":null,"categories":null,"content":"I was born in Ecuador in 1994. My academic career began with a Bachelor\u0026rsquo;s degree in marine biology and genetics at the University of Queensland. Some of my passions are science, environment, conservation, teaching, fitness, and nutrition. Future aspirations let me move to Beijing and do a master\u0026rsquo;s degree in environmental science at Beijing Normal University on risk assessment and pollution. The constant use of R software expanded my enthusiasm for data analysis in a broad range of environment-related fields, motivating me to joined a doctoral program.\n\r Download my resum√©.\n","date":1620086400,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1620086400,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"/authors/admin/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/admin/","section":"authors","summary":"I was born in Ecuador in 1994. My academic career began with a Bachelor\u0026rsquo;s degree in marine biology and genetics at the University of Queensland. Some of my passions are science, environment, conservation, teaching, fitness, and nutrition.","tags":null,"title":"Roberto Supe","type":"authors"},{"authors":[],"categories":["R","tidyverse"],"content":"As an environmentalist, I have worked with historical data and modeling. Some programs will need you to have individual folders and individual data files with certain extensions for each day, month, year, or study location that you want to analyze. What if your data is in a single file ü§Ø. Making 10files will be ok, but 2000 will take a while nonetheless; thanks to the power of R, we can do that in a few minutes ‚è±.\nWhat you will learn:\n For-loops Work with excel files Create folder Subset data Write and save text files  Libraries\r\r\r\rGenerally, I like to work with CSV or TXT files. Nonetheless, it is common to have data in excel files. To avoid changing the format, I will use the package readxl to import .xlsx files.\n#install.packages(\u0026quot;readxl\u0026quot;)\rlibrary(readxl)\rlibrary(tidyverse)\rlibrary(utils)\r Excel files\r\r\r\rThe example file will have two locations, one sheet for each site. For each area, there are multiple variables with daily data between 1979 and 2100. You can get the Dataset for this tutorial\n Objective: Have individual text files for each year and locations stored in the corresponding year folder.\n Read excel files\r\r\r\rLet\u0026rsquo;s begin by reading the file\ndata\u0026lt;- readxl::read_excel(\u0026quot;climate_data.xlsx\u0026quot;,sheet = 1,skip = 0)\r With the read_excel you can specify the sheet as well as skip a few rows.\nSubset your data\r\r\r\rNow, we need to filter the data. We will select the first 4 columns and data from 2000.\ndt1 \u0026lt;- dplyr::filter(data[,1:4],Year==2002) #if you get some problems when filtering years, you can use Year=factor(year)\rhead(dt1)\r ## # A tibble: 6 x 4\r## Year Day Maxtemp Mintemp\r## \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt;\r## 1 2002 1 -15.6 -23.2\r## 2 2002 2 -14.7 -21.5\r## 3 2002 3 -11 -18.3\r## 4 2002 4 -11.2 -19.4\r## 5 2002 5 -11.2 -18 ## 6 2002 6 -8.3 -17.5\r There are many ways to subset your data, but one of the most straightforward ways is using filter from dplyr. As I did with data[,1:4], this specifies the dimensions that I want to use data[rows,collumns]. Tip: To remember which one goes first, think of a Red Chicken (Rows, Columns).\n This is also one of my favorite packages because you can integrate extended code for data analysis and prosses.\n Now that we selected our year, we can write the text file that we need.\nwrite.table(dt1[,2:4], #remove additional variables from your filtered data\rfile=\u0026quot;station_1_year_2000.txt\u0026quot;, #filemane of your file. #if nested folders then add the folder_name/file_name for each file\rcol.names=T,row.names = F,quote = FALSE) #remove all the row.names and \u0026quot; \u0026quot; from col.names  For-loop\r\r\r\rAs I said before, we will have many years and locations, so we want to run that for all our data. When something is the same repeated, then for-loops are a great alternative.\nstudy_year\u0026lt;-min(data$Year):max(data$Year) #store all the years in a new vector\rtail(study_year) # have a look at last five variables\r ## [1] 2095 2096 2097 2098 2099 2100\r Create folders\r\r\r\rLet\u0026rsquo;s create our folders and have a simple example of what we will do with the for-loop. The structure that we need to follow is this for (variable in vector).\n#for (variable in vector) for(year in # year can be any text\rstudy_year[1:2]){ #our vector\rprint(as.character(year)) # show me which year the loop is running\rdir.create(path = paste(year)) # create the folder named by year\r}\r Magic\r\r\r\rIt is common to use guides with for-loops to know which iteration the loop is doing; I used print to display a message.\nfor (j in 1:2) { # how many pages you have 1:n pages\rdata\u0026lt;-readxl::read_excel(\u0026quot;climate_data.xlsx\u0026quot;,sheet = j)\rfilename = paste(\u0026quot;station \u0026quot;,j,\u0026quot;.txt\u0026quot;,sep = \u0026quot;\u0026quot;) #file name for each i year\rfor (i in c(1:length(study_year))){ #i in as many years we got\rdt1 \u0026lt;- dplyr::filter(data[,1:4],Year==study_year[i]) #filter the data\rwrite.table(dt1[,2:4], #remove additional variables from your filtered data\rfile=\u0026quot;station_1_year_2000.txt\u0026quot;, #filemane of your file. #if nested folders then add the folder_name/file_name for each file\rcol.names=T,row.names = F,quote = FALSE) #remove all the row.names and \u0026quot; \u0026quot; from col.names print(paste(\u0026quot;done with year\u0026quot;,study_year[i],\u0026quot;Station\u0026quot;,j)) # message\r}\r}\r Summary\r\r\r\rWriting files is easy with R and will save you a lot of time. Some of the take away messages and points to follow are:\n Read your long files üìö. Filter your information üìã. Create folders üìÇ. Use a for-loop to filter and save to the right folder ‚úÖ.   These were some of the steps that I followed to create over 2000 files. You can replace the extension make sure to change the function, e.g., write.csv(). Hopefully, you have a long data set and you need to create new files soon. You got it under control, and it will just take a few minutes. If you liked this post, share it with your friends and on your social media. Constantly check my page for more practical and efficient R tutorials üëè.\n","date":1620432000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1620446277,"objectID":"13b1b54c0848f41cc200e994f76b78a6","permalink":"/post/2021-05-08-create-folder/","publishdate":"2021-05-08T00:00:00Z","relpermalink":"/post/2021-05-08-create-folder/","section":"post","summary":"As an environmentalist, I have worked with historical data and modeling. Some programs will need you to have individual folders and individual data files with certain extensions for each day, month, year, or study location that you want to analyze.","tags":["folders","text","Excel","for-loop","tutorials","Academic","write files","RMarkdown","blogdown","Rmd","knitr"],"title":"Create folders and files with for-loop","type":"post"},{"authors":[],"categories":["R"],"content":"One of the advantages of R is the ability to get resources directly from source pages. This post will show you some helpful code when you want to get many files from web pages, saving a lot of time and structure everything nicely.\nWhat you will learn\n Download pages Create files Replace text Unzip folders  Libraries\r\r\r\rThere are over 100k packages in R. I will use the pacman package to load multiple libraries inside the function.\n#install.packages(pacman)\r#install.packages(purrr)\rpacman::p_load(purrr) #raster, rgdal, rgeos, stringr\r Let\u0026rsquo;s find a database. For this example, we will use rainfall data from chirps. All my files have links following a pattern, thus making this example plausible. We will identify those similar elements and replace them accordingly.\nDownload a file\r\r\r\rLet\u0026rsquo;s begin by downloading the following file:\nhttps://data.chc.ucsb.edu/products/CHIRPS-2.0/global_daily/tifs/p05/1987/chirps-v2.0.1987.01.04.tif.gz\nWe will use the function download.file from utils. If you check its documentation, type ?download.file in your console, the window will say: This function can be used to download a file from the Internet. Exactly what we want; now we need to add a few elements to make it work url and destfile at least.\nfile_url \u0026lt;- \u0026quot;https://data.chc.ucsb.edu/products/CHIRPS-2.0/global_daily/tifs/p05/1982/chirps-v2.0.1982.01.01.tif.gz\u0026quot;\r# file_url \u0026lt;- paste0(\u0026quot;https://data.chc.ucsb.edu/products/CHIRPS-2.0/global_daily/tifs/p05/\u0026quot;,\r# \u0026quot;1998/chirps-v2.0.1998.02.11.tif.gz\u0026quot;)\rdownload.file(url = file_url,\rdestfile = basename(file_url))\r I added two file_url options; there may be some error if you use the full link. If you do, then paste text without spaces, paste0(), to build the link.\nMultiple files\r\r\r\rOur objective is to get multiple files; it could be months, days, or years of data. Then we can follow these steps:\nIdentify similarities\r\r\r\rIdentify what is similar for all those paths and store that information as a vector; here, I used pth.\npth \u0026lt;- 'https://data.chc.ucsb.edu/products/CHIRPS-2.0/global_daily/tifs/p05/'\r Identify differences\r\r\r\rWe see that years and dates are different among files, so we want to create a vector that stores all those values with . and - as required.\nyear=2016\rdates \u0026lt;- seq(as.Date(paste0(year, \u0026quot;-01-01\u0026quot;)), as.Date(paste0(year, \u0026quot;-12-31\u0026quot;)), by=\u0026quot;days\u0026quot;)\rdates = gsub(pattern = '-', replacement = '.', x = as.character(dates))\rdata_source\u0026lt;-'/chirps-v2.0.'\rfile_extension\u0026lt;-'.tif.gz'\r# join all the parts to have the final links\rpaths \u0026lt;- paste0(pth, year, data_source, dates, file_extension)\rhead(paths,2)\r ## [1] \u0026quot;https://data.chc.ucsb.edu/products/CHIRPS-2.0/global_daily/tifs/p05/2016/chirps-v2.0.2016.01.01.tif.gz\u0026quot;\r## [2] \u0026quot;https://data.chc.ucsb.edu/products/CHIRPS-2.0/global_daily/tifs/p05/2016/chirps-v2.0.2016.01.02.tif.gz\u0026quot;\r Our links are ready so that we can place them inside the previous function.\ndownload.file(url = paths,\rdestfile = basename(file_url))\r Function\r\r\r\rWe could have many years to build a function to make sure we have the correct files for each year.\n Date vector with seq and as.Date Replace strings with gsub Join vectors and strings with paste0  download_Online_data \u0026lt;- function(year){\r#print(year) # leave some guides so you know which year, file\rdates \u0026lt;- seq(as.Date(paste0(year, \u0026quot;-01-01\u0026quot;)), as.Date(paste0(year, \u0026quot;-12-31\u0026quot;)), by=\u0026quot;days\u0026quot;)\rdates \u0026lt;- gsub('-', '.', as.character(dates))\rpaths \u0026lt;- paste0(pth, year, '/chirps-v2.0.', dates, '.tif.gz')\rlapply(1:length(paths), function(k){\rdownload.file(url = paths[k],\rdestfile = paste0('.', basename(paths[k]))) # for this page do not add w as type=\u0026quot;w\u0026quot; it will })\r}\r Selected data\r\r\r\rLet\u0026rsquo;s test the above function to get daily data files between 1990 and 2020\nyear \u0026lt;- 1990:2020\rpurrr::map(.x = year, .f = download_Online_data)\r You will get a new window and the R will get you the files you need.\n To unzip these files use the following:\n R.utils::gunzip(\u0026quot;path/file_name\u0026quot;, remove = FALSE)\r Summary\r\r\r\r Find your links and check their structure üîó. Create vectors that are match the required links üìÅ. Use download.file to get your data ‚¨á\t. Add everything into a function to get all the data you need üîÅ\t.   These were some of the steps that I followed to get rainfall data from CHIRPS. Multiple databases will have similar structures; you got some ideas to stop clicking every link you need üí°\t. If you liked this post, share it with your friends and on your social media. Constantly check my page for more practical and efficient R tutorials.\n","date":1620259200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1620304760,"objectID":"3b6f2ddb4ce873226b83ae2cb1d92ac8","permalink":"/post/2021-05-06-download-data/","publishdate":"2021-05-06T00:00:00Z","relpermalink":"/post/2021-05-06-download-data/","section":"post","summary":"One of the advantages of R is the ability to get resources directly from source pages. This post will show you some helpful code when you want to get many files from web pages, saving a lot of time and structure everything nicely.","tags":["download data","Date variables","gsub","Excel","Loops","tutorials","RMarkdown","blogdown","Rmd","knitr"],"title":"Automated Data Download","type":"post"},{"authors":[],"categories":[],"content":"\rWhat did we covere\r\r\r\r Fundamental Linear models. Statistical concepts and how to apply them in practice. Gain experience with R, including data visualization with ggplot2 and Plotly and data wrangling with Dplyr.  Program overview\r\r\r\rThis site was built to provide additional information and content to the lecture slides of the course Environmental Statistics at Beijing Normal University. Similarly, lecture plots were converted into R with the code used for the graphs included in the posts. It is a page created for you to be familiar with R-Studio and very important packages that will help you during your studies and career. All the information in the articles followed the lecture topics of Professor Yingxia Li. The information, figures, and models were added to the page by Roberto Supe .\nMeet your instructor\r\r\r\r\rRoberto Supe\nFAQs\r\r\r\rAre there prerequisites?There are no prerequisites for the first course.\n How often do the courses run?Continuously, at your own pace.\n. ","date":1620172800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1620174852,"objectID":"e456003bd998b115cd4f60353681a96b","permalink":"/course/2021-05-05-statistics/","publishdate":"2021-05-05T00:00:00Z","relpermalink":"/course/2021-05-05-statistics/","section":"course","summary":"General introduction to statistical analysis for environmental science using R","tags":[],"title":"üìä Environmental Statistics","type":"course"},{"authors":["Roberto Supe","Ouyang Wei","Gu Xiang","Lin Chunye","Tysklind Mats","Wang Baodong"],"categories":["R","Publications"],"content":"Click the Cite button above to import publication metadata into your reference management software.\nCreate your slides in Markdown - click the Slides button to check out the example.\nSupplementary notes can be added here.\n","date":1620086400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1620086400,"objectID":"c2f406537dcc0002ad530cdddd0ce7df","permalink":"/publication/2021-05-04-atrazine-jzb/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/2021-05-04-atrazine-jzb/","section":"publication","summary":"This article study ecological and human health risks of atrazine in the Jiozhou Bay, China","tags":["data visualization","SSD","THQ","RQ","Boxplot","Maps","Range plot","lognormal distribution"],"title":"Typical herbicide residues, trophic transfer, bioconcentration, and health risk of marine organisms","type":"publication"},{"authors":[],"categories":["R"],"content":"R has been updating drastically in recent years. Different packages will help you with the right tools (YAML, CSS, js, fonts) to get sophisticated outputs. We will use pagedown as a package to design different documents, among them resumes. To make it even easier, efficient, and fast we will use an excellent template and add some modifications to give it a unique style.\nMajor points that you will learn:\n Pagedown RMarkdown CSS  Installation\r\r\r\rLike any other package, we will need to install the package. You can add the following line of code in your console, R file, RMarkdown file. Similarly, you can go to the Packages window and type pagedown.\ninstall.packages(\u0026quot;pagedown\u0026quot;,dependencies = T) # add any required package library(pagedown)\r After successfully installed the packages, we will be almost ready to create a resume.\nPreliminary output\r\r\r\rGo to File-\u0026gt; New File-\u0026gt; R markdown -\u0026gt; From template -\u0026gt; HTML resume {blogdown}\nAt this point, you can use the knit bottom, and you will the default template. There are many parts inside the document we could explain all of them, but you will learn faster if you have something that looks and works right. I have used this approach in many situations; you will avoid minor or straightforward errors.\nModifications\r\r\r\rAfter seeing the preliminary output, you can correctly identify the information inside the .Rmd file. To change the image, you need to add the full path to the image, or place it where you saved your .rmd file to use just the name. Something like this will work:\n![caption](my_image.jpg).  If you are happy with the style and content, that will be everything you need to do. How fast and awesome was that !!! No need to spend a whole day with Word.\nAfter you changed the text, you may want to add a few additional points to style it slightly differently.\nYALM\r\r\r\rWe will need a new .css file to store all the additions in our Resume. Use Rstudio to create the file by using File -\u0026gt; New File -\u0026gt; CSS file and save it. I named it changes.css; name it as you wish and follow the template below. Everything that we add here will be joined with the original .css after the following text in the YAML header of your .Rmd file. The YAML header is at the top of your document. To use our modified CSS file then you need the following. Knit it again to add the css files. Later you only need to add your css modifications, save, and refresh the pop-up window (top corner, to the right of publish).\ndate: \u0026quot;2021-05-09\u0026quot;\routput:\rpagedown::html_resume:\rcss: - changes.css # OVERIDE CERTAIN FUNCTIONS OF CSS\r- resume # DEFAULT FILE\r# set it to true for a self-contained HTML page but it'll take longer to render\rself_contained: false\r  In all your RMarkdown documents, you need to make sure the indent is adequate; otherwise, it will not work, or you will get errors.\n If the viewer window is too small, click the third icon at the top-left corner of the panel (show in a new window). You can also copy the link appearing in the R Markdown window after you knit the document. It shows something like \u0026ldquo;serving \u0026hellip;.. at http://something124\u0026hellip;.\u0026rdquo;.\nCSS\r\r\r\rThe main thing that you need to know is how to identify the structure of the document. With the latest version (0.14), you will get some additional folders, including font, CSS, and other attributes. Go to the folder resume_files -\u0026gt; paged-0.14 -\u0026gt; css and open resume.css. That one has all the information that you currently have. If you want to modify something, we will copy and add it to our new CSS file. If we want to add something new, we follow the guides used in the corresponding parts in the default file.\n Select your chages.css file and let\u0026rsquo;s add some awesome changes.\n To override default settings inside the root, add your modification inside { } with * as the name. Something like this:\n* {\r/* Override default margins*/\r--pagedjs-margin-right: 0.2in;\r--pagedjs-margin-left: 0.2in;\r--pagedjs-margin-top: 0.2in;\r--pagedjs-margin-bottom: 0.2in;\r--sidebar-width: 12rem;\r--sidebar-background-color: #D8F0FF;\r--decorator-border: 2px solid #a2e2e2; /* change color and thickness of timeline */\r}\r If you want to justify all the text, then you can have something like this:\nbody {\rtext-align: justify;\r}\r If you want to do this change in one place then use divisions with specific styles \u0026lt;div style=\u0026quot;text-align:justify;\u0026quot;\u0026gt; some text that will be justified \u0026lt;/div\u0026gt;.\nWe will have more information to add to the sidebar or the body. We can do something like this to maintain the style.\n Identify the code inside the default CSS Rename it accordingly, the same in both the .Rmd and changes.css.  I want to add languages, so I did the following:\n Languages {#languages}\r-----------------------------------------------------------------------\r- \u0026lt;i class=\u0026quot;fa fa-language\u0026quot;\u0026gt;\u0026lt;/i\u0026gt; Add your text\r Notice that we added fa-language that is a great icon  from Font Awesome for this part. You can find the complete list here.\nSummary\r\r\r\r  Create a resume using blogdown template üîó.\n  Replace the content with your information ‚ö†\t.\n  Add new categories following the current structure üí¨.\n  Change the style by adding a new CSS file ‚úÖ.\n   These were some of the steps that I followed to create my resum√©. Hopefully, you add different modifications to get excellent results üèÖ. If you liked this post, share it with your friends and on your social media. Constantly check my page for more practical and efficient R tutorials.\n","date":1619827200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1619838913,"objectID":"a65e047374fe018de5b77bd208a3328c","permalink":"/post/2021-05-01-resume/","publishdate":"2021-05-01T00:00:00Z","relpermalink":"/post/2021-05-01-resume/","section":"post","summary":"R has been updating drastically in recent years. Different packages will help you with the right tools (YAML, CSS, js, fonts) to get sophisticated outputs. We will use pagedown as a package to design different documents, among them resumes.","tags":["RMarkdown","resume","blogdown","PDF","tutorials","CSS","Rmd","YALM","knitr"],"title":"Outstanding Resume with RMarkdown in 30 min","type":"post"},{"authors":["Pius Babuna","Chuanliang Han","Meijia Li","Amatus Gyilbagi","Bian Dehuia Doris","Abra Awudi","Roberto Supe","Saini Yang","Xiaohua Yang"],"categories":["R","Publications"],"content":"Supplementary notes can be found here.\n","date":1619481600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1619481600,"objectID":"7dc4c905885071e133c7eb27da27e20b","permalink":"/publication/a-different-article/","publishdate":"2021-04-15T00:00:00Z","relpermalink":"/publication/a-different-article/","section":"publication","summary":"This article study the relationship between temperature and humidity on the spread of COVID-19.","tags":["COVID19"],"title":"The effect of human settlement temperature and humidity on the growth rules of infected and recovered cases of COVID-19","type":"publication"},{"authors":[],"categories":[],"content":"\rWhat did we covere\r\r\r\r Fundamental raster files Landscape metrics with the package landscapemetrics Gain experience with R, including data visualization with ggplot2 {}} and data wrangling with Dplyr\nProgram overview This short course was created to provide an additional option to quantify landscape configuration using R. The landscape subject to analysis is powerful and can represent any spatial phenomenon. R will quantify, sample, and show the areal extent and spatial configuration of patches within a landscape. We will cover a few important steps for data analysis and visualization. This site was build by Roberto Supe Tulcan (PhD student) and the research team of Professor Shiliang Liu, course coordinator and lecturer of Landscape Ecology at Beijing Normal University.\nMeet your instructor Roberto Supe\nFAQs Are there prerequisites?There are no prerequisites for the first course.\n How often do the courses run?Continuously, at your own pace.\n   ","date":1619481600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1619504594,"objectID":"bf69dee9074b0dbf94c7cd6cbc74cffe","permalink":"/course/2021-04-27-landscape-ecology/","publishdate":"2021-04-27T00:00:00Z","relpermalink":"/course/2021-04-27-landscape-ecology/","section":"course","summary":"General introduction to landscape ecology and landscape metrics using R","tags":[],"title":"üó∫ Landscape Ecology","type":"course"},{"authors":["Moses Fayiah","Shikui Dong","Sanjah Singh","Roberto Supe","Kadijatu Sheriff","Ibrahim Robinson Kargbo","Abdulai Barrie"],"categories":["R","Publications"],"content":"","date":1605657600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1605657600,"objectID":"c70f37c86ba3651bd2f2e7047fbee282","permalink":"/publication/2021-05-04-sl-forests/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/2021-05-04-sl-forests/","section":"publication","summary":"This article assessed the seedlings, saplings, and trees species diversity, abundance, richness and regeneration status of tropical forests in four PAs across Sierra Leone","tags":["Forests","Natural reserves","Ecology","Protected areas","Regeneration","seedlings","Shannon diversity","Simpson diversity","DBH","Species richness"],"title":"Plant diversity and regeneration potentials in protected area forests of Sierra Leone","type":"publication"},{"authors":null,"categories":null,"content":"","date":1546300800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1546300800,"objectID":"8576ec274c98b3831668a172fa632d80","permalink":"/about/","publishdate":"2019-01-01T00:00:00Z","relpermalink":"/about/","section":"","summary":"A little more about me and how to get in touch","tags":null,"title":"Resume","type":"widget_page"},{"authors":null,"categories":null,"content":"My blog posts are released under a Creative Commons Attribution-ShareAlike 4.0 International License.\n\r\r\r","date":1530140400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1530140400,"objectID":"53e892b8b41cc4caece1cfd5ef21d6e7","permalink":"/license/","publishdate":"2018-06-28T00:00:00+01:00","relpermalink":"/license/","section":"","summary":"My blog posts are released under a Creative Commons Attribution-ShareAlike 4.0 International License.\n\r\r\r","tags":null,"title":"LICENSE: CC-BY-SA","type":"page"}]